{"version":3,"sources":["constants/employeesConstants.js","actions/employeesActions.js","actions/birthdayActions.js","Screens/EmployeeScreen.jsx","Screens/EmployeesBoxScreen.jsx","Screens/EmployeesSceen.jsx","Screens/BirthdayScreen.jsx","App.js","reportWebVitals.js","store.js","reducers/employeesReducers.js","index.js"],"names":["EMPLOYEES_LIST_REQUEST","EMPLOYEES_LIST_SUCCESS","EMPLOYEES_LIST_FAIL","UPDATE_EMPLOYEES_CHECK_BOX","EMPLOYEE_ADD","EMPLOYEE_REMOVE","sortEmployees","data","sortedEmployees","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","mapEmployees","item","letter","lastName","notActive","active","push","map","Map","Object","entries","convertedData","dob","convetedDataBirthday","dateBirthday","date","Date","month","moment","format","year","dateInMonth","updateEmployees","arrEmployees","id","employeeData","newArrEmployees","JSON","parse","stringify","find","forEach","sortedByLastName","length","sort","a","b","toLowerCase","sortedByMonth","dataEmployee","state","dataBirthday","May","June","July","August","September","October","November","December","January","February","March","April","arrBirthdayEnployees","EmployeeScreen","props","employee","firstName","dispatch","useDispatch","handleCheck","getState","employeesList","employees","newState","type","payload","localStorage","setItem","split","slice","birthdayList","employeesBirthday","sortedDataByMonth","sortedEmployeesByName","newStateBirthday","i","splice","addToBirthdayList","style","color","fontWeight","name","checked","onChange","EmployeesBoxScreen","listBox","list","className","EmployeesScreen","useSelector","loading","error","useEffect","axios","newData","message","BirthdayMonthScreen","boxList","BirthdayScreen","filter","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","action","getItem","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8bf4ac7d.chunk.js","sourcesContent":["export const EMPLOYEES_LIST_REQUEST = 'EMPLOYEES_LIST_REQUEST';\nexport const EMPLOYEES_LIST_SUCCESS = 'EMPLOYEES_LIST_SUCCESS';\nexport const EMPLOYEES_LIST_FAIL = 'EMPLOYEES_LIST_FAIL';\n\nexport const UPDATE_EMPLOYEES_CHECK_BOX = 'UPDATE_EMPLOYEES_CHECK_BOX';\n\nexport const EMPLOYEE_ADD = 'EMPLOYEE_ADD';\nexport const EMPLOYEE_REMOVE = 'EMPLOYEE_REMOVE';\n","import * as axios from 'axios';\nimport moment from 'moment';\nimport {\n  EMPLOYEES_LIST_FAIL,\n  EMPLOYEES_LIST_REQUEST,\n  EMPLOYEES_LIST_SUCCESS,\n} from '../constants/employeesConstants';\n\nconst fetchEmployees = () => async (dispatch) => {\n  if (localStorage.employees) {\n    let employees = JSON.parse(localStorage.employees);\n    dispatch({ type: EMPLOYEES_LIST_SUCCESS, payload: employees });\n  } else {\n    try {\n      dispatch({ type: EMPLOYEES_LIST_REQUEST });\n      const { data } = await axios.get(\n        'https://yalantis-react-school-api.yalantis.com/api/task0/users'\n      );\n      const newData = sortEmployees(convertedData(data));\n      dispatch({ type: EMPLOYEES_LIST_SUCCESS, payload: newData });\n      localStorage.setItem('employees', JSON.stringify(newData));\n    } catch (error) {\n      dispatch({ type: EMPLOYEES_LIST_FAIL, payload: error.message });\n    }\n  }\n};\n\nconst sortEmployees = (data) => {\n  const sortedEmployees = {\n    A: [],\n    B: [],\n    C: [],\n    D: [],\n    E: [],\n    F: [],\n    G: [],\n    H: [],\n    I: [],\n    J: [],\n    K: [],\n    L: [],\n    M: [],\n    N: [],\n    O: [],\n    P: [],\n    Q: [],\n    R: [],\n    S: [],\n    T: [],\n    U: [],\n    V: [],\n    W: [],\n    X: [],\n    Y: [],\n    Z: [],\n  };\n  const mapEmployees = [];\n  for (let item of data) {\n    let letter = item.lastName[0];\n    item.notActive = true;\n    item.active = false;\n    sortedEmployees[letter].push(item);\n  }\n  let map = new Map(Object.entries(sortedEmployees));\n  for (let item of map) {\n    mapEmployees.push(item);\n  }\n  return mapEmployees;\n};\n\nconst convertedData = (data) => {\n  return data.map((item) => {\n    return { ...item, dob: convetedDataBirthday(item.dob) };\n  });\n};\n\nconst convetedDataBirthday = (dateBirthday) => {\n  const date = new Date(dateBirthday);\n  const month = moment(date).format('MMMM');\n  const year = moment(date).format('YYYY');\n  const dateInMonth = moment(date).format('D');\n  return `${dateInMonth} ${month}, ${year} year`;\n};\n\nexport { fetchEmployees };\n","import {\n  EMPLOYEE_ADD,\n  EMPLOYEE_REMOVE,\n  UPDATE_EMPLOYEES_CHECK_BOX,\n} from '../constants/employeesConstants';\n\nconst addToBirthdayList = (letter, id) => (dispatch, getState) => {\n  const state = getState();\n  const [newState, employeeData] = updateEmployees(\n    state.employeesList.employees,\n    letter,\n    id\n  );\n\n  dispatch({ type: UPDATE_EMPLOYEES_CHECK_BOX, payload: newState });\n  localStorage.setItem('employees', JSON.stringify(newState));\n\n  let month = employeeData.dob.split(' ')[1].slice(0, -1);\n\n  if (employeeData.active) {\n    let newState = JSON.parse(\n      JSON.stringify(state.birthdayList.employeesBirthday)\n    );\n\n    let sortedDataByMonth = sortedByMonth(employeeData, newState, month);\n\n    let sortedEmployeesByName = sortedByLastName(month, sortedDataByMonth);\n\n    dispatch({ type: EMPLOYEE_ADD, payload: sortedEmployeesByName });\n    localStorage.setItem(\n      'employeesBirthday',\n      JSON.stringify(sortedEmployeesByName)\n    );\n  } else {\n    let newStateBirthday = JSON.parse(\n      JSON.stringify(state.birthdayList.employeesBirthday)\n    );\n    newStateBirthday.forEach((item) => {\n      if (item[0] === month) {\n        if (item[1].length === 1) {\n          item[1] = [];\n        } else {\n          for (let i = 0; i <= item[1].length; i++) {\n            if (item[1][i].id === employeeData.id) {\n              item[1].splice(i, 1);\n              break;\n            }\n          }\n        }\n      }\n    });\n    dispatch({ type: EMPLOYEE_REMOVE, payload: newStateBirthday });\n    localStorage.setItem('employeesBirthday', JSON.stringify(newStateBirthday));\n  }\n};\n\nconst updateEmployees = (arrEmployees, letter, id) => {\n  let employeeData;\n  let newArrEmployees = JSON.parse(JSON.stringify(arrEmployees));\n  let arrEmployeesByLetter = newArrEmployees.find((item) => item[0] === letter);\n  arrEmployeesByLetter[1].forEach((item) => {\n    if (item.id === id) {\n      item.active = !item.active;\n      item.notActive = !item.notActive;\n      employeeData = item;\n    }\n  });\n  return [newArrEmployees, employeeData];\n};\n\nconst sortedByLastName = (month, data) => {\n  for (let item of data) {\n    if (item[1].length > 1 && month === item[0]) {\n      item[1].sort((a, b) =>\n        a.lastName.toLowerCase() > b.lastName.toLowerCase() ? 1 : -1\n      );\n    }\n  }\n  return data;\n};\n\nconst sortedByMonth = (dataEmployee, state, month) => {\n  if (state.length) {\n    return state.map((item) => {\n      if (item[0] === month) {\n        item[1].push(dataEmployee);\n      }\n      return item;\n    });\n  } else {\n    const dataBirthday = {\n      May: [],\n      June: [],\n      July: [],\n      August: [],\n      September: [],\n      October: [],\n      November: [],\n      December: [],\n      January: [],\n      February: [],\n      March: [],\n      April: [],\n    };\n\n    dataBirthday[month].push(dataEmployee);\n    const arrBirthdayEnployees = [];\n    let map = new Map(Object.entries(dataBirthday));\n    for (let item of map) {\n      arrBirthdayEnployees.push(item);\n    }\n    return arrBirthdayEnployees;\n  }\n};\n\nexport { addToBirthdayList };\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addToBirthdayList } from '../actions/birthdayActions';\n\nconst EmployeeScreen = (props) => {\n  const {\n    employee: { firstName, lastName, active, notActive, id },\n    letter,\n  } = props;\n  const dispatch = useDispatch();\n  const handleCheck = () => {\n    dispatch(addToBirthdayList(letter, id));\n  };\n  return (\n    <>\n      <div>\n        <p style={active ? { color: 'blue' } : { color: 'inherit' }}>\n          <span style={{ fontWeight: 'bold' }}>\n            {lastName} {firstName}\n          </span>\n        </p>\n        <div>\n          <p>\n            <span>\n              <label>\n                not active{' '}\n                <input\n                  type='radio'\n                  name={id}\n                  checked={notActive}\n                  onChange={handleCheck}\n                />\n              </label>\n            </span>\n          </p>\n          <p>\n            <span>\n              <label>\n                active{' '}\n                <input\n                  type='radio'\n                  name={id}\n                  checked={active}\n                  onChange={handleCheck}\n                />\n              </label>\n            </span>\n          </p>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default EmployeeScreen;\n","import React from 'react';\nimport EmployeeScreen from './EmployeeScreen';\n\nconst EmployeesBoxScreen = ({ listBox }) => {\n  let [letter, list] = listBox;\n\n  return (\n    <>\n      <h3>{letter}</h3>\n      <ul className='listByAlphabet'>\n        {list.length ? (\n          list.map((item) => (\n            <li key={item.id}>\n              <EmployeeScreen employee={item} letter={letter} />\n            </li>\n          ))\n        ) : (\n          <li>------</li>\n        )}\n      </ul>\n    </>\n  );\n};\n\nexport default EmployeesBoxScreen;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchEmployees } from '../actions/employeesActions';\nimport EmployeesBoxScreen from './EmployeesBoxScreen';\n\nconst EmployeesScreen = () => {\n  const employeesList = useSelector((state) => state.employeesList);\n  const { employees, loading, error } = employeesList;\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchEmployees());\n  }, []);\n\n  return (\n    <div className='blockEmployees'>\n      <h1>Employees</h1>\n      {loading ? (\n        <div>Loading...</div>\n      ) : error ? (\n        <div>error</div>\n      ) : (\n        <div>\n          <div className='containerEmployees'>\n            {employees.map((item) => {\n              return (\n                <div key={item[0]} className='boxEmployees'>\n                  <EmployeesBoxScreen listBox={item} />\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default EmployeesScreen;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nconst BirthdayScreen = () => {\n  const birthdayList = useSelector(\n    (state) => state.birthdayList.employeesBirthday\n  );\n  const employeesBirthday = birthdayList.filter((item) => item[1].length !== 0);\n  return (\n    <div>\n      <h1>Employees birthday</h1>\n      {employeesBirthday.length ? (\n        <div className='boxBirthday'>\n          {employeesBirthday.map((item) => (\n            <div key={item[0]}>\n              <BirthdayMonthScreen boxList={item} />\n            </div>\n          ))}\n        </div>\n      ) : (\n        <div> Employees List is empty</div>\n      )}\n    </div>\n  );\n};\n\nconst BirthdayMonthScreen = ({ boxList }) => {\n  const [month, list] = boxList;\n  return (\n    <div>\n      <h4>{month}</h4>\n      <ul>\n        {list.map((item) => (\n          <li key={item.id}>\n            {item.lastName} {item.firstName} - {item.dob}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default BirthdayScreen;\n","import React from 'react';\nimport './App.css';\nimport EmployeesScreen from './Screens/EmployeesSceen';\nimport BirthdayScreen from './Screens/BirthdayScreen';\n\nfunction App() {\n  return (\n    <div className='wrapper'>\n      <EmployeesScreen />\n      <BirthdayScreen />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\r\nimport {\r\n  birthdayReducer,\r\n  employeesReducer,\r\n} from './reducers/employeesReducers';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst initialState = {};\r\nconst reducer = combineReducers({\r\n  employeesList: employeesReducer,\r\n  birthdayList: birthdayReducer,\r\n});\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeEnhancer(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","import {\n  EMPLOYEE_ADD,\n  EMPLOYEE_REMOVE,\n  EMPLOYEES_LIST_FAIL,\n  EMPLOYEES_LIST_REQUEST,\n  EMPLOYEES_LIST_SUCCESS,\n  UPDATE_EMPLOYEES_CHECK_BOX,\n} from '../constants/employeesConstants';\n\nconst employeesReducer = (state = { employees: [] }, action) => {\n  switch (action.type) {\n    case EMPLOYEES_LIST_REQUEST:\n      return {\n        loading: true,\n        employees: [],\n      };\n    case EMPLOYEES_LIST_SUCCESS:\n      return {\n        loading: false,\n        employees: action.payload,\n      };\n    case EMPLOYEES_LIST_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n    case UPDATE_EMPLOYEES_CHECK_BOX:\n      return {\n        loading: false,\n        employees: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nconst birthdayReducer = (\n  state = {\n    employeesBirthday: JSON.parse(\n      localStorage.getItem('employeesBirthday') || '[]'\n    ),\n  },\n  action\n) => {\n  switch (action.type) {\n    case EMPLOYEE_ADD:\n      return {\n        employeesBirthday: action.payload,\n      };\n    case EMPLOYEE_REMOVE:\n      return {\n        employeesBirthday: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport { employeesReducer, birthdayReducer };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}